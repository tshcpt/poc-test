management:
  health:
    probes:
      enabled: true

app:
  datasource:
    write1:
      jdbcUrl: jdbc:mysql://database-1-instance-1.cipwprgh221p.us-east-1.rds.amazonaws.com:3306/pocdb?useSSL=false&serverTimezone=UTC
      #url: jdbc:mysql://localhost:3306/poc?useSSL=false&serverTimezone=UTC
      username: admin
      password: Feud640yarn413
    write2:
      jdbcUrl: jdbc:mysql://poc-db-cluster1.cluster-cipwprgh221p.us-east-1.rds.amazonaws.com:3306/pocdb?useSSL=false&serverTimezone=UTC
      #url: jdbc:mysql://localhost:3306/poc?useSSL=false&serverTimezone=UTC
      username: admin
      password: Feud640yarn413
spring:
  jpa:
    hibernate.ddl-auto: update
    generate-ddl: true
    show-sql: true
    database: mysql
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  cloud:
    function:
      definition: ledgerConsumer;resultProducer;resultConsumer;
    stream:
      default-binder: poc-cluster-binder
      default:
        producer:
          errorChannelEnabled: true
      kafka:
        default:
          producer:
            configuration:
              linger.ms: 100
      binders:
        poc-cluster-binder:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      autoCreateTopics: false
                      brokers: localhost:9092
      function:
        bindings:
          ledgerConsumer-in-0: poc-con-in
          resultProducer-out-0: poc-res-out
          resultConsumer-in-0: poc-res-in
      bindings:
        poc-con-in:
          destination: poc-inbound1
          group: inbound1
        poc-res-out:
          content-type: application/json
          destination: poc-outbound1
        poc-res-in:
          destination: poc-outbound1
          group: outbound1
trace: true